//
//  ISIcon.h
//  Nyxian
//
//  Created by SeanIsTethered on 08.09.25.
//

@interface ISIcon : NSObject

- (id)imageForSize:(CGSize)arg1 scale:(double)arg2;

@end

@interface ISIconFactory : ISIcon

+ (id)_iconForURL:(id)arg1;
+ (id)_iconForURL:(id)arg1 options:(unsigned long long)arg2;

- (id)_init;
- (id)initWithApplicationBundleIdentifier:(id)arg1;
- (id)initWithApplicationExtensionBundleIdentifier:(id)arg1;
- (id)initWithApplicationIdentity:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)initWithBundleURL:(id)arg1 fileExtension:(id)arg2;
- (id)initWithBundleURL:(id)arg1 type:(id)arg2;
- (id)initWithFileExtension:(id)arg1;
- (id)initWithImages:(id)arg1;
- (id)initWithMIMEType:(id)arg1;
- (id)initWithModelCode:(id)arg1;
- (id)initWithResourceProxy:(id)arg1;
- (id)initWithSymbolName:(id)arg1;
- (id)initWithSymbolName:(id)arg1 configuration:(id)arg2;
- (id)initWithType:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithURL:(id)arg1 options:(unsigned long long)arg2;

@end

@interface ISGenericRecipe : NSObject {
    unsigned long long  _backgroundStyle;
    unsigned long long  _borderWidth;
    bool  _selectedVariant;
    bool  _templateVariant;
}

@property (nonatomic) unsigned long long backgroundStyle;
@property (nonatomic) unsigned long long borderWidth;
@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool selectedVariant;
@property (readonly) Class superclass;
@property (nonatomic) bool templateVariant;

- (unsigned long long)backgroundStyle;
- (unsigned long long)borderWidth;
- (id)layerTreeForSize:(CGSize)arg1 scale:(double)arg2;
- (bool)selectedVariant;
- (void)setBackgroundStyle:(unsigned long long)arg1;
- (void)setBorderWidth:(unsigned long long)arg1;
- (void)setSelectedVariant:(bool)arg1;
- (void)setTemplateVariant:(bool)arg1;
- (bool)templateVariant;

@end

@interface IFImage : NSObject

@property (readonly) struct CGImage *CGImage;

- (bool)largest;

@end

@interface ISBundleResourceProvider

@property (retain) NSURL *bundleURL;
@property (retain) NSDictionary *iconDictionary;
@property unsigned long long options;
@property (retain) NSString *templateType;

- (bool)_isAppleResource;
- (id)bundleURL;
- (id)description;
- (id)iconDictionary;
- (id)iconResource;
- (id)initWithBundle:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithBundleURL:(id)arg1 iconDictionary:(id)arg2 options:(unsigned long long)arg3;
- (void)resolveResources;
- (id)resourceNamed:(id)arg1;
- (void)setBundleURL:(id)arg1;
- (void)setIconDictionary:(id)arg1;
- (void)setTemplateType:(id)arg1;
- (id)symbol;
- (id)templateType;

@end

/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IconServices.framework/IconServices
 */

@interface ISResourceProvider : NSObject

@property bool isGenericProvider;

+ (id)defaultAppIconResourceProvider;
+ (id)resourceProviderWithRecord:(id)arg1 options:(unsigned long long)arg2;
+ (id)resourceProviderWithTypeIdentifier:(id)arg1 options:(unsigned long long)arg2;
+ (id)resourceWithBundleURL:(id)arg1 iconDictionary:(id)arg2 options:(unsigned long long)arg3;
+ (id)resourceWithRecord:(id)arg1 options:(unsigned long long)arg2;
+ (id)resourceWithTypeCode:(unsigned int)arg1 options:(unsigned long long)arg2;
+ (id)resourceWithTypeIdentifier:(id)arg1 options:(unsigned long long)arg2;

- (bool)_findBackgroundResourceWithIconDictionary:(id)arg1 bundle:(id)arg2;
- (bool)_findBadgeResourceWithIconDictionary:(id)arg1 bundle:(id)arg2 record:(id)arg3;
- (bool)_findCustomRecipeWithIconDictionary:(id)arg1 bundle:(id)arg2;
- (bool)_findTextResourceWithIconDictionary:(id)arg1;
- (bool)_isAppleResource;
- (bool)allowAlterationsToResourceArt;
- (bool)allowNonDefaultAppearances;
- (id)badgeResource;
- (void)configureProviderFromDescriptor:(id)arg1;
- (id)customRecipe;
- (id)decorationResources;
- (id)iconResource;
- (id)init;
- (id)initWithResource:(id)arg1 templateResource:(id)arg2;
- (id)initWithResources:(id)arg1;
- (bool)isDocumentBadge;
- (bool)isGenericProvider;
- (bool)isPrecomposed;
- (unsigned long long)lsDatabaseSequenceNumber;
- (id)lsDatabaseUUID;
- (unsigned long long)options;
- (bool)placeholder;
- (unsigned long long)platform;
- (void)resolveIconResource;
- (bool)resolved;
- (id)resourceForKey:(id)arg1;
- (id)resourceNamed:(id)arg1;
- (id)resourceToken;
- (unsigned long long)resourceType;
- (id)resourcesByResourceKey;
- (void)setAllowAlterationsToResourceArt:(bool)arg1;
- (void)setAllowNonDefaultAppearances:(bool)arg1;
- (void)setBadgeResource:(id)arg1;
- (void)setCustomRecipe:(id)arg1;
- (void)setDecorationResources:(id)arg1;
- (void)setIconResource:(id)arg1;
- (void)setIsGenericProvider:(bool)arg1;
- (void)setLsDatabaseSequenceNumber:(unsigned long long)arg1;
- (void)setLsDatabaseUUID:(id)arg1;
- (void)setOptions:(unsigned long long)arg1;
- (void)setPlaceholder:(bool)arg1;
- (void)setPlatform:(unsigned long long)arg1;
- (void)setPlatformWithBundle:(id)arg1;
- (void)setResolved:(bool)arg1;
- (void)setResourceToken:(id)arg1;
- (void)setResourceType:(unsigned long long)arg1;
- (void)setSourceRecordIdentifiers:(id)arg1;
- (void)setSuggestedRecipe:(id)arg1;
- (id)sourceRecordIdentifiers;
- (id)suggestedRecipe;
- (id)symbol;
- (id)templateIconResource;
- (id)validationToken;

@end

@interface ISBundleIcon: ISIcon {
    NSString * _tag;
    NSString * _tagClass;
    NSString * _type;
    NSURL * _url;
}

@property (readonly) NSString *tag;
@property (readonly) NSString *tagClass;
@property (readonly) NSString *type;
@property (readonly) NSURL *url;

+ (bool)supportsSecureCoding;

- (double)_aspectRatio;
- (ISResourceProvider*)_makeAppResourceProvider;
- (id)_makeDocumentResourceProvider;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithBundleURL:(id)arg1;
- (id)initWithBundleURL:(id)arg1 fileExtension:(id)arg2;
- (id)initWithBundleURL:(id)arg1 type:(id)arg2;
- (id)initWithBundleURL:(id)arg1 type:(id)arg2 tag:(id)arg3 tagClass:(id)arg4;
- (id)initWithCoder:(id)arg1;
- (id)makeResourceProvider;
- (id)tag;
- (id)tagClass;
- (id)type;
- (id)url;

@end

@interface ISAssetCatalogResource : NSObject

- (long long)_layoutDirectionFromDevice;
- (long long)appearance;
- (id)catalog;
- (long long)catalogAppearance;
- (bool)disableSubtype;
- (bool)hasDarkResource;
- (bool)hasResourceWithAppearance:(long long)arg1;
- (bool)hasResourceWithAppearance:(long long)arg1 appearanceString:(id)arg2;
- (bool)hasTintableResource;
- (id)imageBag;
- (id)imageForSize:(CGSize)arg1 scale:(double)arg2;
- (id)imageName;
- (id)imageWithName:(id)arg1 scale:(double)arg2;
- (id)initWithCatalog:(id)arg1 imageName:(id)arg2 symbolName:(id)arg3 platform:(unsigned long long)arg4;
- (bool)isPrecomposed;
- (long long)layoutDirection;
- (unsigned long long)platform;
- (void)setAppearance:(long long)arg1;
- (void)setDisableSubtype:(bool)arg1;
- (void)setLayoutDirection:(long long)arg1;
- (id)symbolImageForFontSize:(double)arg1 scale:(double)arg2 symbolSize:(unsigned long long)arg3 symbolWeight:(long long)arg4;
- (id)symbolImageForSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2;
- (id)symbolName;

@end

@interface IFImageBag : NSObject

@property (readonly, copy) NSString *debugDescription; /* unknown property attribute: ? */
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSArray *images;
@property (retain) NSMutableDictionary *imagesByScale;
@property (readonly) Class superclass;

// Image: /System/Library/PrivateFrameworks/IconFoundation.framework/IconFoundation

+ (id)imageBagWithResourcesNamed:(id)arg1 directory:(id)arg2;
+ (id)imageBagWithResourcesNamed:(id)arg1 fromBundle:(id)arg2;
+ (id)imageBagWithResourcesNamed:(id)arg1 fromBundle:(id)arg2 subdirectory:(id)arg3;
+ (id)imageBagWithResourcesNames:(id)arg1 fromBundle:(id)arg2;

- (id)debugDescription;
- (id)imageForSize:(CGSize)arg1 scale:(double)arg2;
- (id)images;
- (id)imagesByScale;
- (id)imagesForScale:(double)arg1;
- (id)init;
- (id)initWithImages:(id)arg1;
- (void)insertImage:(id)arg1;
- (void)setImagesByScale:(id)arg1;

// Image: /System/Library/PrivateFrameworks/IconServices.framework/IconServices

+ (id)defaultAppClipAssetsBag;
+ (id)defaultAppIconAssetsBag;

@end
